// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: pomo_user.sql

package db

import (
	"context"
)

const changePin = `-- name: ChangePin :exec
UPDATE pomo_user
SET
    pin = $1
WHERE
    id = $2
`

type ChangePinParams struct {
	Pin string `json:"pin"`
	ID  int32  `json:"id"`
}

func (q *Queries) ChangePin(ctx context.Context, arg ChangePinParams) error {
	_, err := q.db.Exec(ctx, changePin, arg.Pin, arg.ID)
	return err
}

const createUser = `-- name: CreateUser :one
INSERT INTO
    pomo_user (username, pin)
VALUES
    ($1, $2) RETURNING id,username
`

type CreateUserParams struct {
	Username string `json:"username"`
	Pin      string `json:"pin"`
}

type CreateUserRow struct {
	ID       int32  `json:"id"`
	Username string `json:"username"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error) {
	row := q.db.QueryRow(ctx, createUser, arg.Username, arg.Pin)
	var i CreateUserRow
	err := row.Scan(&i.ID, &i.Username)
	return i, err
}
